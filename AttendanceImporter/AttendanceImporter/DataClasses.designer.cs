#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AttendanceImporter
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="IntegratedDigitalH")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertShiftList(ShiftList instance);
    partial void UpdateShiftList(ShiftList instance);
    partial void DeleteShiftList(ShiftList instance);
    partial void InsertShiftDetail(ShiftDetail instance);
    partial void UpdateShiftDetail(ShiftDetail instance);
    partial void DeleteShiftDetail(ShiftDetail instance);
    partial void InsertEmployeeFingerPrint(EmployeeFingerPrint instance);
    partial void UpdateEmployeeFingerPrint(EmployeeFingerPrint instance);
    partial void DeleteEmployeeFingerPrint(EmployeeFingerPrint instance);
    partial void InsertEmployeeLeave(EmployeeLeave instance);
    partial void UpdateEmployeeLeave(EmployeeLeave instance);
    partial void DeleteEmployeeLeave(EmployeeLeave instance);
    partial void InsertOverTime(OverTime instance);
    partial void UpdateOverTime(OverTime instance);
    partial void DeleteOverTime(OverTime instance);
    partial void InsertDeviceSetting(DeviceSetting instance);
    partial void UpdateDeviceSetting(DeviceSetting instance);
    partial void DeleteDeviceSetting(DeviceSetting instance);
    partial void InsertHoliday(Holiday instance);
    partial void UpdateHoliday(Holiday instance);
    partial void DeleteHoliday(Holiday instance);
    partial void InsertEmployeeAttendance(EmployeeAttendance instance);
    partial void UpdateEmployeeAttendance(EmployeeAttendance instance);
    partial void DeleteEmployeeAttendance(EmployeeAttendance instance);
    partial void InsertAttendanceLogFile(AttendanceLogFile instance);
    partial void UpdateAttendanceLogFile(AttendanceLogFile instance);
    partial void DeleteAttendanceLogFile(AttendanceLogFile instance);
    partial void InsertEmployeeShift(EmployeeShift instance);
    partial void UpdateEmployeeShift(EmployeeShift instance);
    partial void DeleteEmployeeShift(EmployeeShift instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::AttendanceImporter.Properties.Settings.Default.IntegratedDigitalHConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<ShiftList> ShiftLists
		{
			get
			{
				return this.GetTable<ShiftList>();
			}
		}
		
		public System.Data.Linq.Table<ShiftDetail> ShiftDetails
		{
			get
			{
				return this.GetTable<ShiftDetail>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeFingerPrint> EmployeeFingerPrints
		{
			get
			{
				return this.GetTable<EmployeeFingerPrint>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeLeave> EmployeeLeaves
		{
			get
			{
				return this.GetTable<EmployeeLeave>();
			}
		}
		
		public System.Data.Linq.Table<OverTime> OverTimes
		{
			get
			{
				return this.GetTable<OverTime>();
			}
		}
		
		public System.Data.Linq.Table<DeviceSetting> DeviceSettings
		{
			get
			{
				return this.GetTable<DeviceSetting>();
			}
		}
		
		public System.Data.Linq.Table<Holiday> Holidays
		{
			get
			{
				return this.GetTable<Holiday>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeAttendance> EmployeeAttendances
		{
			get
			{
				return this.GetTable<EmployeeAttendance>();
			}
		}
		
		public System.Data.Linq.Table<AttendanceLogFile> AttendanceLogFiles
		{
			get
			{
				return this.GetTable<AttendanceLogFile>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeShift> EmployeeShifts
		{
			get
			{
				return this.GetTable<EmployeeShift>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _EmployeeCode;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _AmharicMiddleName;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private System.Guid _ZoneId;
		
		private string _Woreda;
		
		private int _Gender;
		
		private System.DateTime _BirthDate;
		
		private int _MaritalStatus;
		
		private string _ImagePath;
		
		private int _EmploymentType;
		
		private int _PaymentType;
		
		private System.DateTime _EmploymentDate;
		
		private System.Nullable<System.DateTime> _ContractEndDate;
		
		private System.Nullable<System.DateTime> _TerminatedDate;
		
		private bool _IsPension;
		
		private int _EmploymentStatus;
		
		private string _PensionCode;
		
		private string _TinNumber;
		
		private bool _ExistingEmployee;
		
		private bool _IsApproved;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedById;
		
		private int _Rowstatus;
		
		private string _AmharicFirstName;
		
		private string _AmharicLastName;
		
		private bool _IdGenerated;
		
		private EntitySet<EmployeeFingerPrint> _EmployeeFingerPrints;
		
		private EntitySet<EmployeeLeave> _EmployeeLeaves;
		
		private EntitySet<EmployeeLeave> _EmployeeLeaves1;
		
		private EntitySet<OverTime> _OverTimes;
		
		private EntitySet<EmployeeShift> _EmployeeShifts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAmharicMiddleNameChanging(string value);
    partial void OnAmharicMiddleNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnZoneIdChanging(System.Guid value);
    partial void OnZoneIdChanged();
    partial void OnWoredaChanging(string value);
    partial void OnWoredaChanged();
    partial void OnGenderChanging(int value);
    partial void OnGenderChanged();
    partial void OnBirthDateChanging(System.DateTime value);
    partial void OnBirthDateChanged();
    partial void OnMaritalStatusChanging(int value);
    partial void OnMaritalStatusChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    partial void OnEmploymentTypeChanging(int value);
    partial void OnEmploymentTypeChanged();
    partial void OnPaymentTypeChanging(int value);
    partial void OnPaymentTypeChanged();
    partial void OnEmploymentDateChanging(System.DateTime value);
    partial void OnEmploymentDateChanged();
    partial void OnContractEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnContractEndDateChanged();
    partial void OnTerminatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTerminatedDateChanged();
    partial void OnIsPensionChanging(bool value);
    partial void OnIsPensionChanged();
    partial void OnEmploymentStatusChanging(int value);
    partial void OnEmploymentStatusChanged();
    partial void OnPensionCodeChanging(string value);
    partial void OnPensionCodeChanged();
    partial void OnTinNumberChanging(string value);
    partial void OnTinNumberChanged();
    partial void OnExistingEmployeeChanging(bool value);
    partial void OnExistingEmployeeChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByIdChanging(string value);
    partial void OnCreatedByIdChanged();
    partial void OnRowstatusChanging(int value);
    partial void OnRowstatusChanged();
    partial void OnAmharicFirstNameChanging(string value);
    partial void OnAmharicFirstNameChanged();
    partial void OnAmharicLastNameChanging(string value);
    partial void OnAmharicLastNameChanged();
    partial void OnIdGeneratedChanging(bool value);
    partial void OnIdGeneratedChanged();
    #endregion
		
		public Employee()
		{
			this._EmployeeFingerPrints = new EntitySet<EmployeeFingerPrint>(new Action<EmployeeFingerPrint>(this.attach_EmployeeFingerPrints), new Action<EmployeeFingerPrint>(this.detach_EmployeeFingerPrints));
			this._EmployeeLeaves = new EntitySet<EmployeeLeave>(new Action<EmployeeLeave>(this.attach_EmployeeLeaves), new Action<EmployeeLeave>(this.detach_EmployeeLeaves));
			this._EmployeeLeaves1 = new EntitySet<EmployeeLeave>(new Action<EmployeeLeave>(this.attach_EmployeeLeaves1), new Action<EmployeeLeave>(this.detach_EmployeeLeaves1));
			this._OverTimes = new EntitySet<OverTime>(new Action<OverTime>(this.attach_OverTimes), new Action<OverTime>(this.detach_OverTimes));
			this._EmployeeShifts = new EntitySet<EmployeeShift>(new Action<EmployeeShift>(this.attach_EmployeeShifts), new Action<EmployeeShift>(this.detach_EmployeeShifts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmharicMiddleName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AmharicMiddleName
		{
			get
			{
				return this._AmharicMiddleName;
			}
			set
			{
				if ((this._AmharicMiddleName != value))
				{
					this.OnAmharicMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._AmharicMiddleName = value;
					this.SendPropertyChanged("AmharicMiddleName");
					this.OnAmharicMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ZoneId
		{
			get
			{
				return this._ZoneId;
			}
			set
			{
				if ((this._ZoneId != value))
				{
					this.OnZoneIdChanging(value);
					this.SendPropertyChanging();
					this._ZoneId = value;
					this.SendPropertyChanged("ZoneId");
					this.OnZoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Woreda", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Woreda
		{
			get
			{
				return this._Woreda;
			}
			set
			{
				if ((this._Woreda != value))
				{
					this.OnWoredaChanging(value);
					this.SendPropertyChanging();
					this._Woreda = value;
					this.SendPropertyChanged("Woreda");
					this.OnWoredaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Int NOT NULL")]
		public int Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="Int NOT NULL")]
		public int MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(MAX)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentType", DbType="Int NOT NULL")]
		public int EmploymentType
		{
			get
			{
				return this._EmploymentType;
			}
			set
			{
				if ((this._EmploymentType != value))
				{
					this.OnEmploymentTypeChanging(value);
					this.SendPropertyChanging();
					this._EmploymentType = value;
					this.SendPropertyChanged("EmploymentType");
					this.OnEmploymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="Int NOT NULL")]
		public int PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime EmploymentDate
		{
			get
			{
				return this._EmploymentDate;
			}
			set
			{
				if ((this._EmploymentDate != value))
				{
					this.OnEmploymentDateChanging(value);
					this.SendPropertyChanging();
					this._EmploymentDate = value;
					this.SendPropertyChanged("EmploymentDate");
					this.OnEmploymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractEndDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ContractEndDate
		{
			get
			{
				return this._ContractEndDate;
			}
			set
			{
				if ((this._ContractEndDate != value))
				{
					this.OnContractEndDateChanging(value);
					this.SendPropertyChanging();
					this._ContractEndDate = value;
					this.SendPropertyChanged("ContractEndDate");
					this.OnContractEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminatedDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> TerminatedDate
		{
			get
			{
				return this._TerminatedDate;
			}
			set
			{
				if ((this._TerminatedDate != value))
				{
					this.OnTerminatedDateChanging(value);
					this.SendPropertyChanging();
					this._TerminatedDate = value;
					this.SendPropertyChanged("TerminatedDate");
					this.OnTerminatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPension", DbType="Bit NOT NULL")]
		public bool IsPension
		{
			get
			{
				return this._IsPension;
			}
			set
			{
				if ((this._IsPension != value))
				{
					this.OnIsPensionChanging(value);
					this.SendPropertyChanging();
					this._IsPension = value;
					this.SendPropertyChanged("IsPension");
					this.OnIsPensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentStatus", DbType="Int NOT NULL")]
		public int EmploymentStatus
		{
			get
			{
				return this._EmploymentStatus;
			}
			set
			{
				if ((this._EmploymentStatus != value))
				{
					this.OnEmploymentStatusChanging(value);
					this.SendPropertyChanging();
					this._EmploymentStatus = value;
					this.SendPropertyChanged("EmploymentStatus");
					this.OnEmploymentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PensionCode", DbType="NVarChar(MAX)")]
		public string PensionCode
		{
			get
			{
				return this._PensionCode;
			}
			set
			{
				if ((this._PensionCode != value))
				{
					this.OnPensionCodeChanging(value);
					this.SendPropertyChanging();
					this._PensionCode = value;
					this.SendPropertyChanged("PensionCode");
					this.OnPensionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinNumber", DbType="NVarChar(MAX)")]
		public string TinNumber
		{
			get
			{
				return this._TinNumber;
			}
			set
			{
				if ((this._TinNumber != value))
				{
					this.OnTinNumberChanging(value);
					this.SendPropertyChanging();
					this._TinNumber = value;
					this.SendPropertyChanged("TinNumber");
					this.OnTinNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExistingEmployee", DbType="Bit NOT NULL")]
		public bool ExistingEmployee
		{
			get
			{
				return this._ExistingEmployee;
			}
			set
			{
				if ((this._ExistingEmployee != value))
				{
					this.OnExistingEmployeeChanging(value);
					this.SendPropertyChanging();
					this._ExistingEmployee = value;
					this.SendPropertyChanged("ExistingEmployee");
					this.OnExistingEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="NVarChar(450)")]
		public string CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rowstatus", DbType="Int NOT NULL")]
		public int Rowstatus
		{
			get
			{
				return this._Rowstatus;
			}
			set
			{
				if ((this._Rowstatus != value))
				{
					this.OnRowstatusChanging(value);
					this.SendPropertyChanging();
					this._Rowstatus = value;
					this.SendPropertyChanged("Rowstatus");
					this.OnRowstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmharicFirstName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AmharicFirstName
		{
			get
			{
				return this._AmharicFirstName;
			}
			set
			{
				if ((this._AmharicFirstName != value))
				{
					this.OnAmharicFirstNameChanging(value);
					this.SendPropertyChanging();
					this._AmharicFirstName = value;
					this.SendPropertyChanged("AmharicFirstName");
					this.OnAmharicFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmharicLastName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AmharicLastName
		{
			get
			{
				return this._AmharicLastName;
			}
			set
			{
				if ((this._AmharicLastName != value))
				{
					this.OnAmharicLastNameChanging(value);
					this.SendPropertyChanging();
					this._AmharicLastName = value;
					this.SendPropertyChanged("AmharicLastName");
					this.OnAmharicLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGenerated", DbType="Bit NOT NULL")]
		public bool IdGenerated
		{
			get
			{
				return this._IdGenerated;
			}
			set
			{
				if ((this._IdGenerated != value))
				{
					this.OnIdGeneratedChanging(value);
					this.SendPropertyChanging();
					this._IdGenerated = value;
					this.SendPropertyChanged("IdGenerated");
					this.OnIdGeneratedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeFingerPrint", Storage="_EmployeeFingerPrints", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<EmployeeFingerPrint> EmployeeFingerPrints
		{
			get
			{
				return this._EmployeeFingerPrints;
			}
			set
			{
				this._EmployeeFingerPrints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeLeave", Storage="_EmployeeLeaves", ThisKey="Id", OtherKey="ApproverEmployeeId")]
		public EntitySet<EmployeeLeave> EmployeeLeaves
		{
			get
			{
				return this._EmployeeLeaves;
			}
			set
			{
				this._EmployeeLeaves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeLeave1", Storage="_EmployeeLeaves1", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<EmployeeLeave> EmployeeLeaves1
		{
			get
			{
				return this._EmployeeLeaves1;
			}
			set
			{
				this._EmployeeLeaves1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_OverTime", Storage="_OverTimes", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<OverTime> OverTimes
		{
			get
			{
				return this._OverTimes;
			}
			set
			{
				this._OverTimes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeShift", Storage="_EmployeeShifts", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<EmployeeShift> EmployeeShifts
		{
			get
			{
				return this._EmployeeShifts;
			}
			set
			{
				this._EmployeeShifts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeFingerPrints(EmployeeFingerPrint entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EmployeeFingerPrints(EmployeeFingerPrint entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_EmployeeLeaves(EmployeeLeave entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EmployeeLeaves(EmployeeLeave entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_EmployeeLeaves1(EmployeeLeave entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_EmployeeLeaves1(EmployeeLeave entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_OverTimes(OverTime entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_OverTimes(OverTime entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_EmployeeShifts(EmployeeShift entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EmployeeShifts(EmployeeShift entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShiftLists")]
	public partial class ShiftList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _ShiftName;
		
		private string _AmharicShiftName;
		
		private System.TimeSpan _CheckIn;
		
		private System.TimeSpan _CheckOut;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedById;
		
		private int _Rowstatus;
		
		private EntitySet<ShiftDetail> _ShiftDetails;
		
		private EntitySet<EmployeeShift> _EmployeeShifts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnShiftNameChanging(string value);
    partial void OnShiftNameChanged();
    partial void OnAmharicShiftNameChanging(string value);
    partial void OnAmharicShiftNameChanged();
    partial void OnCheckInChanging(System.TimeSpan value);
    partial void OnCheckInChanged();
    partial void OnCheckOutChanging(System.TimeSpan value);
    partial void OnCheckOutChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByIdChanging(string value);
    partial void OnCreatedByIdChanged();
    partial void OnRowstatusChanging(int value);
    partial void OnRowstatusChanged();
    #endregion
		
		public ShiftList()
		{
			this._ShiftDetails = new EntitySet<ShiftDetail>(new Action<ShiftDetail>(this.attach_ShiftDetails), new Action<ShiftDetail>(this.detach_ShiftDetails));
			this._EmployeeShifts = new EntitySet<EmployeeShift>(new Action<EmployeeShift>(this.attach_EmployeeShifts), new Action<EmployeeShift>(this.detach_EmployeeShifts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ShiftName
		{
			get
			{
				return this._ShiftName;
			}
			set
			{
				if ((this._ShiftName != value))
				{
					this.OnShiftNameChanging(value);
					this.SendPropertyChanging();
					this._ShiftName = value;
					this.SendPropertyChanged("ShiftName");
					this.OnShiftNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmharicShiftName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AmharicShiftName
		{
			get
			{
				return this._AmharicShiftName;
			}
			set
			{
				if ((this._AmharicShiftName != value))
				{
					this.OnAmharicShiftNameChanging(value);
					this.SendPropertyChanging();
					this._AmharicShiftName = value;
					this.SendPropertyChanged("AmharicShiftName");
					this.OnAmharicShiftNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckIn", DbType="Time NOT NULL")]
		public System.TimeSpan CheckIn
		{
			get
			{
				return this._CheckIn;
			}
			set
			{
				if ((this._CheckIn != value))
				{
					this.OnCheckInChanging(value);
					this.SendPropertyChanging();
					this._CheckIn = value;
					this.SendPropertyChanged("CheckIn");
					this.OnCheckInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOut", DbType="Time NOT NULL")]
		public System.TimeSpan CheckOut
		{
			get
			{
				return this._CheckOut;
			}
			set
			{
				if ((this._CheckOut != value))
				{
					this.OnCheckOutChanging(value);
					this.SendPropertyChanging();
					this._CheckOut = value;
					this.SendPropertyChanged("CheckOut");
					this.OnCheckOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="NVarChar(450)")]
		public string CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rowstatus", DbType="Int NOT NULL")]
		public int Rowstatus
		{
			get
			{
				return this._Rowstatus;
			}
			set
			{
				if ((this._Rowstatus != value))
				{
					this.OnRowstatusChanging(value);
					this.SendPropertyChanging();
					this._Rowstatus = value;
					this.SendPropertyChanged("Rowstatus");
					this.OnRowstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShiftList_ShiftDetail", Storage="_ShiftDetails", ThisKey="Id", OtherKey="ShiftId")]
		public EntitySet<ShiftDetail> ShiftDetails
		{
			get
			{
				return this._ShiftDetails;
			}
			set
			{
				this._ShiftDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShiftList_EmployeeShift", Storage="_EmployeeShifts", ThisKey="Id", OtherKey="ShiftListId")]
		public EntitySet<EmployeeShift> EmployeeShifts
		{
			get
			{
				return this._EmployeeShifts;
			}
			set
			{
				this._EmployeeShifts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShiftDetails(ShiftDetail entity)
		{
			this.SendPropertyChanging();
			entity.ShiftList = this;
		}
		
		private void detach_ShiftDetails(ShiftDetail entity)
		{
			this.SendPropertyChanging();
			entity.ShiftList = null;
		}
		
		private void attach_EmployeeShifts(EmployeeShift entity)
		{
			this.SendPropertyChanging();
			entity.ShiftList = this;
		}
		
		private void detach_EmployeeShifts(EmployeeShift entity)
		{
			this.SendPropertyChanging();
			entity.ShiftList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShiftDetails")]
	public partial class ShiftDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _ShiftId;
		
		private string _WeekDays;
		
		private int _BreakTime;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedById;
		
		private int _Rowstatus;
		
		private EntityRef<ShiftList> _ShiftList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnShiftIdChanging(System.Guid value);
    partial void OnShiftIdChanged();
    partial void OnWeekDaysChanging(string value);
    partial void OnWeekDaysChanged();
    partial void OnBreakTimeChanging(int value);
    partial void OnBreakTimeChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByIdChanging(string value);
    partial void OnCreatedByIdChanged();
    partial void OnRowstatusChanging(int value);
    partial void OnRowstatusChanged();
    #endregion
		
		public ShiftDetail()
		{
			this._ShiftList = default(EntityRef<ShiftList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ShiftId
		{
			get
			{
				return this._ShiftId;
			}
			set
			{
				if ((this._ShiftId != value))
				{
					if (this._ShiftList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftIdChanging(value);
					this.SendPropertyChanging();
					this._ShiftId = value;
					this.SendPropertyChanged("ShiftId");
					this.OnShiftIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekDays", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string WeekDays
		{
			get
			{
				return this._WeekDays;
			}
			set
			{
				if ((this._WeekDays != value))
				{
					this.OnWeekDaysChanging(value);
					this.SendPropertyChanging();
					this._WeekDays = value;
					this.SendPropertyChanged("WeekDays");
					this.OnWeekDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakTime", DbType="Int NOT NULL")]
		public int BreakTime
		{
			get
			{
				return this._BreakTime;
			}
			set
			{
				if ((this._BreakTime != value))
				{
					this.OnBreakTimeChanging(value);
					this.SendPropertyChanging();
					this._BreakTime = value;
					this.SendPropertyChanged("BreakTime");
					this.OnBreakTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="NVarChar(450)")]
		public string CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rowstatus", DbType="Int NOT NULL")]
		public int Rowstatus
		{
			get
			{
				return this._Rowstatus;
			}
			set
			{
				if ((this._Rowstatus != value))
				{
					this.OnRowstatusChanging(value);
					this.SendPropertyChanging();
					this._Rowstatus = value;
					this.SendPropertyChanged("Rowstatus");
					this.OnRowstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShiftList_ShiftDetail", Storage="_ShiftList", ThisKey="ShiftId", OtherKey="Id", IsForeignKey=true)]
		public ShiftList ShiftList
		{
			get
			{
				return this._ShiftList.Entity;
			}
			set
			{
				ShiftList previousValue = this._ShiftList.Entity;
				if (((previousValue != value) 
							|| (this._ShiftList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShiftList.Entity = null;
						previousValue.ShiftDetails.Remove(this);
					}
					this._ShiftList.Entity = value;
					if ((value != null))
					{
						value.ShiftDetails.Add(this);
						this._ShiftId = value.Id;
					}
					else
					{
						this._ShiftId = default(System.Guid);
					}
					this.SendPropertyChanged("ShiftList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeFingerPrints")]
	public partial class EmployeeFingerPrint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _EmployeeId;
		
		private int _FingerPrintCode;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedById;
		
		private int _Rowstatus;
		
		private EntitySet<EmployeeAttendance> _EmployeeAttendances;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(System.Guid value);
    partial void OnEmployeeIdChanged();
    partial void OnFingerPrintCodeChanging(int value);
    partial void OnFingerPrintCodeChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByIdChanging(string value);
    partial void OnCreatedByIdChanged();
    partial void OnRowstatusChanging(int value);
    partial void OnRowstatusChanged();
    #endregion
		
		public EmployeeFingerPrint()
		{
			this._EmployeeAttendances = new EntitySet<EmployeeAttendance>(new Action<EmployeeAttendance>(this.attach_EmployeeAttendances), new Action<EmployeeAttendance>(this.detach_EmployeeAttendances));
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FingerPrintCode", DbType="Int NOT NULL")]
		public int FingerPrintCode
		{
			get
			{
				return this._FingerPrintCode;
			}
			set
			{
				if ((this._FingerPrintCode != value))
				{
					this.OnFingerPrintCodeChanging(value);
					this.SendPropertyChanging();
					this._FingerPrintCode = value;
					this.SendPropertyChanged("FingerPrintCode");
					this.OnFingerPrintCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="NVarChar(450)")]
		public string CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rowstatus", DbType="Int NOT NULL")]
		public int Rowstatus
		{
			get
			{
				return this._Rowstatus;
			}
			set
			{
				if ((this._Rowstatus != value))
				{
					this.OnRowstatusChanging(value);
					this.SendPropertyChanging();
					this._Rowstatus = value;
					this.SendPropertyChanged("Rowstatus");
					this.OnRowstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeFingerPrint_EmployeeAttendance", Storage="_EmployeeAttendances", ThisKey="Id", OtherKey="FingerPrintId")]
		public EntitySet<EmployeeAttendance> EmployeeAttendances
		{
			get
			{
				return this._EmployeeAttendances;
			}
			set
			{
				this._EmployeeAttendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeFingerPrint", Storage="_Employee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeFingerPrints.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeFingerPrints.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(System.Guid);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeAttendances(EmployeeAttendance entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeFingerPrint = this;
		}
		
		private void detach_EmployeeAttendances(EmployeeAttendance entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeFingerPrint = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeLeaves")]
	public partial class EmployeeLeave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _EmployeeId;
		
		private System.Guid _LeaveTypeId;
		
		private System.DateTime _FromDate;
		
		private System.DateTime _ToDate;
		
		private int _TotalDate;
		
		private int _LeaveStatus;
		
		private System.Nullable<System.DateTime> _ApprovedDate;
		
		private System.Nullable<System.Guid> _ApproverEmployeeId;
		
		private string _Reason;
		
		private string _Remark;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedById;
		
		private int _Rowstatus;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(System.Guid value);
    partial void OnEmployeeIdChanged();
    partial void OnLeaveTypeIdChanging(System.Guid value);
    partial void OnLeaveTypeIdChanged();
    partial void OnFromDateChanging(System.DateTime value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.DateTime value);
    partial void OnToDateChanged();
    partial void OnTotalDateChanging(int value);
    partial void OnTotalDateChanged();
    partial void OnLeaveStatusChanging(int value);
    partial void OnLeaveStatusChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    partial void OnApproverEmployeeIdChanging(System.Nullable<System.Guid> value);
    partial void OnApproverEmployeeIdChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByIdChanging(string value);
    partial void OnCreatedByIdChanged();
    partial void OnRowstatusChanging(int value);
    partial void OnRowstatusChanged();
    #endregion
		
		public EmployeeLeave()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LeaveTypeId
		{
			get
			{
				return this._LeaveTypeId;
			}
			set
			{
				if ((this._LeaveTypeId != value))
				{
					this.OnLeaveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeId = value;
					this.SendPropertyChanged("LeaveTypeId");
					this.OnLeaveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDate", DbType="Int NOT NULL")]
		public int TotalDate
		{
			get
			{
				return this._TotalDate;
			}
			set
			{
				if ((this._TotalDate != value))
				{
					this.OnTotalDateChanging(value);
					this.SendPropertyChanging();
					this._TotalDate = value;
					this.SendPropertyChanged("TotalDate");
					this.OnTotalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveStatus", DbType="Int NOT NULL")]
		public int LeaveStatus
		{
			get
			{
				return this._LeaveStatus;
			}
			set
			{
				if ((this._LeaveStatus != value))
				{
					this.OnLeaveStatusChanging(value);
					this.SendPropertyChanging();
					this._LeaveStatus = value;
					this.SendPropertyChanged("LeaveStatus");
					this.OnLeaveStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="DateTime2")]
		public System.Nullable<System.DateTime> ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverEmployeeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ApproverEmployeeId
		{
			get
			{
				return this._ApproverEmployeeId;
			}
			set
			{
				if ((this._ApproverEmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApproverEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._ApproverEmployeeId = value;
					this.SendPropertyChanged("ApproverEmployeeId");
					this.OnApproverEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(MAX)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="NVarChar(450)")]
		public string CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rowstatus", DbType="Int NOT NULL")]
		public int Rowstatus
		{
			get
			{
				return this._Rowstatus;
			}
			set
			{
				if ((this._Rowstatus != value))
				{
					this.OnRowstatusChanging(value);
					this.SendPropertyChanging();
					this._Rowstatus = value;
					this.SendPropertyChanged("Rowstatus");
					this.OnRowstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeLeave", Storage="_Employee", ThisKey="ApproverEmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeLeaves.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeLeaves.Add(this);
						this._ApproverEmployeeId = value.Id;
					}
					else
					{
						this._ApproverEmployeeId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeLeave1", Storage="_Employee1", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.EmployeeLeaves1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.EmployeeLeaves1.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(System.Guid);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OverTimes")]
	public partial class OverTime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _EmployeeId;
		
		private double _NormalOT;
		
		private double _NightOT;
		
		private double _DayoffOT;
		
		private double _HolidayOT;
		
		private System.DateTime _OverTimeDate;
		
		private bool _Approved;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedById;
		
		private int _Rowstatus;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(System.Guid value);
    partial void OnEmployeeIdChanged();
    partial void OnNormalOTChanging(double value);
    partial void OnNormalOTChanged();
    partial void OnNightOTChanging(double value);
    partial void OnNightOTChanged();
    partial void OnDayoffOTChanging(double value);
    partial void OnDayoffOTChanged();
    partial void OnHolidayOTChanging(double value);
    partial void OnHolidayOTChanged();
    partial void OnOverTimeDateChanging(System.DateTime value);
    partial void OnOverTimeDateChanged();
    partial void OnApprovedChanging(bool value);
    partial void OnApprovedChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByIdChanging(string value);
    partial void OnCreatedByIdChanged();
    partial void OnRowstatusChanging(int value);
    partial void OnRowstatusChanged();
    #endregion
		
		public OverTime()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalOT", DbType="Float NOT NULL")]
		public double NormalOT
		{
			get
			{
				return this._NormalOT;
			}
			set
			{
				if ((this._NormalOT != value))
				{
					this.OnNormalOTChanging(value);
					this.SendPropertyChanging();
					this._NormalOT = value;
					this.SendPropertyChanged("NormalOT");
					this.OnNormalOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NightOT", DbType="Float NOT NULL")]
		public double NightOT
		{
			get
			{
				return this._NightOT;
			}
			set
			{
				if ((this._NightOT != value))
				{
					this.OnNightOTChanging(value);
					this.SendPropertyChanging();
					this._NightOT = value;
					this.SendPropertyChanged("NightOT");
					this.OnNightOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayoffOT", DbType="Float NOT NULL")]
		public double DayoffOT
		{
			get
			{
				return this._DayoffOT;
			}
			set
			{
				if ((this._DayoffOT != value))
				{
					this.OnDayoffOTChanging(value);
					this.SendPropertyChanging();
					this._DayoffOT = value;
					this.SendPropertyChanged("DayoffOT");
					this.OnDayoffOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayOT", DbType="Float NOT NULL")]
		public double HolidayOT
		{
			get
			{
				return this._HolidayOT;
			}
			set
			{
				if ((this._HolidayOT != value))
				{
					this.OnHolidayOTChanging(value);
					this.SendPropertyChanging();
					this._HolidayOT = value;
					this.SendPropertyChanged("HolidayOT");
					this.OnHolidayOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverTimeDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime OverTimeDate
		{
			get
			{
				return this._OverTimeDate;
			}
			set
			{
				if ((this._OverTimeDate != value))
				{
					this.OnOverTimeDateChanging(value);
					this.SendPropertyChanging();
					this._OverTimeDate = value;
					this.SendPropertyChanged("OverTimeDate");
					this.OnOverTimeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit NOT NULL")]
		public bool Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="NVarChar(450)")]
		public string CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rowstatus", DbType="Int NOT NULL")]
		public int Rowstatus
		{
			get
			{
				return this._Rowstatus;
			}
			set
			{
				if ((this._Rowstatus != value))
				{
					this.OnRowstatusChanging(value);
					this.SendPropertyChanging();
					this._Rowstatus = value;
					this.SendPropertyChanged("Rowstatus");
					this.OnRowstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_OverTime", Storage="_Employee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.OverTimes.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.OverTimes.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(System.Guid);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeviceSettings")]
	public partial class DeviceSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _Model;
		
		private string _Ip;
		
		private int _Port;
		
		private int _Com;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedById;
		
		private int _Rowstatus;
		
		private EntitySet<AttendanceLogFile> _AttendanceLogFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnPortChanging(int value);
    partial void OnPortChanged();
    partial void OnComChanging(int value);
    partial void OnComChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByIdChanging(string value);
    partial void OnCreatedByIdChanged();
    partial void OnRowstatusChanging(int value);
    partial void OnRowstatusChanged();
    #endregion
		
		public DeviceSetting()
		{
			this._AttendanceLogFiles = new EntitySet<AttendanceLogFile>(new Action<AttendanceLogFile>(this.attach_AttendanceLogFiles), new Action<AttendanceLogFile>(this.detach_AttendanceLogFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					this.OnIpChanging(value);
					this.SendPropertyChanging();
					this._Ip = value;
					this.SendPropertyChanged("Ip");
					this.OnIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="Int NOT NULL")]
		public int Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Com", DbType="Int NOT NULL")]
		public int Com
		{
			get
			{
				return this._Com;
			}
			set
			{
				if ((this._Com != value))
				{
					this.OnComChanging(value);
					this.SendPropertyChanging();
					this._Com = value;
					this.SendPropertyChanged("Com");
					this.OnComChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="NVarChar(450)")]
		public string CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rowstatus", DbType="Int NOT NULL")]
		public int Rowstatus
		{
			get
			{
				return this._Rowstatus;
			}
			set
			{
				if ((this._Rowstatus != value))
				{
					this.OnRowstatusChanging(value);
					this.SendPropertyChanging();
					this._Rowstatus = value;
					this.SendPropertyChanged("Rowstatus");
					this.OnRowstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeviceSetting_AttendanceLogFile", Storage="_AttendanceLogFiles", ThisKey="Id", OtherKey="DeviceSettingId")]
		public EntitySet<AttendanceLogFile> AttendanceLogFiles
		{
			get
			{
				return this._AttendanceLogFiles;
			}
			set
			{
				this._AttendanceLogFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AttendanceLogFiles(AttendanceLogFile entity)
		{
			this.SendPropertyChanging();
			entity.DeviceSetting = this;
		}
		
		private void detach_AttendanceLogFiles(AttendanceLogFile entity)
		{
			this.SendPropertyChanging();
			entity.DeviceSetting = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Holidays")]
	public partial class Holiday : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private System.DateTime _Date;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedById;
		
		private int _Rowstatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByIdChanging(string value);
    partial void OnCreatedByIdChanged();
    partial void OnRowstatusChanging(int value);
    partial void OnRowstatusChanged();
    #endregion
		
		public Holiday()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime2 NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="NVarChar(450)")]
		public string CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rowstatus", DbType="Int NOT NULL")]
		public int Rowstatus
		{
			get
			{
				return this._Rowstatus;
			}
			set
			{
				if ((this._Rowstatus != value))
				{
					this.OnRowstatusChanging(value);
					this.SendPropertyChanging();
					this._Rowstatus = value;
					this.SendPropertyChanged("Rowstatus");
					this.OnRowstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeAttendances")]
	public partial class EmployeeAttendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.TimeSpan _CheckIn;
		
		private System.TimeSpan _CheckOut;
		
		private System.DateTime _AttendanceDate;
		
		private string _AttencanceType;
		
		private System.TimeSpan _TotalTime;
		
		private System.Guid _FingerPrintId;
		
		private bool _TakeFromVacation;
		
		private string _AbsentReason;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedById;
		
		private int _Rowstatus;
		
		private EntityRef<EmployeeFingerPrint> _EmployeeFingerPrint;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnCheckInChanging(System.TimeSpan value);
    partial void OnCheckInChanged();
    partial void OnCheckOutChanging(System.TimeSpan value);
    partial void OnCheckOutChanged();
    partial void OnAttendanceDateChanging(System.DateTime value);
    partial void OnAttendanceDateChanged();
    partial void OnAttencanceTypeChanging(string value);
    partial void OnAttencanceTypeChanged();
    partial void OnTotalTimeChanging(System.TimeSpan value);
    partial void OnTotalTimeChanged();
    partial void OnFingerPrintIdChanging(System.Guid value);
    partial void OnFingerPrintIdChanged();
    partial void OnTakeFromVacationChanging(bool value);
    partial void OnTakeFromVacationChanged();
    partial void OnAbsentReasonChanging(string value);
    partial void OnAbsentReasonChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByIdChanging(string value);
    partial void OnCreatedByIdChanged();
    partial void OnRowstatusChanging(int value);
    partial void OnRowstatusChanged();
    #endregion
		
		public EmployeeAttendance()
		{
			this._EmployeeFingerPrint = default(EntityRef<EmployeeFingerPrint>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckIn", DbType="Time NOT NULL")]
		public System.TimeSpan CheckIn
		{
			get
			{
				return this._CheckIn;
			}
			set
			{
				if ((this._CheckIn != value))
				{
					this.OnCheckInChanging(value);
					this.SendPropertyChanging();
					this._CheckIn = value;
					this.SendPropertyChanged("CheckIn");
					this.OnCheckInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOut", DbType="Time NOT NULL")]
		public System.TimeSpan CheckOut
		{
			get
			{
				return this._CheckOut;
			}
			set
			{
				if ((this._CheckOut != value))
				{
					this.OnCheckOutChanging(value);
					this.SendPropertyChanging();
					this._CheckOut = value;
					this.SendPropertyChanged("CheckOut");
					this.OnCheckOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime AttendanceDate
		{
			get
			{
				return this._AttendanceDate;
			}
			set
			{
				if ((this._AttendanceDate != value))
				{
					this.OnAttendanceDateChanging(value);
					this.SendPropertyChanging();
					this._AttendanceDate = value;
					this.SendPropertyChanged("AttendanceDate");
					this.OnAttendanceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttencanceType", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AttencanceType
		{
			get
			{
				return this._AttencanceType;
			}
			set
			{
				if ((this._AttencanceType != value))
				{
					this.OnAttencanceTypeChanging(value);
					this.SendPropertyChanging();
					this._AttencanceType = value;
					this.SendPropertyChanged("AttencanceType");
					this.OnAttencanceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTime", DbType="Time NOT NULL")]
		public System.TimeSpan TotalTime
		{
			get
			{
				return this._TotalTime;
			}
			set
			{
				if ((this._TotalTime != value))
				{
					this.OnTotalTimeChanging(value);
					this.SendPropertyChanging();
					this._TotalTime = value;
					this.SendPropertyChanged("TotalTime");
					this.OnTotalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FingerPrintId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FingerPrintId
		{
			get
			{
				return this._FingerPrintId;
			}
			set
			{
				if ((this._FingerPrintId != value))
				{
					if (this._EmployeeFingerPrint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFingerPrintIdChanging(value);
					this.SendPropertyChanging();
					this._FingerPrintId = value;
					this.SendPropertyChanged("FingerPrintId");
					this.OnFingerPrintIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakeFromVacation", DbType="Bit NOT NULL")]
		public bool TakeFromVacation
		{
			get
			{
				return this._TakeFromVacation;
			}
			set
			{
				if ((this._TakeFromVacation != value))
				{
					this.OnTakeFromVacationChanging(value);
					this.SendPropertyChanging();
					this._TakeFromVacation = value;
					this.SendPropertyChanged("TakeFromVacation");
					this.OnTakeFromVacationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbsentReason", DbType="NVarChar(MAX)")]
		public string AbsentReason
		{
			get
			{
				return this._AbsentReason;
			}
			set
			{
				if ((this._AbsentReason != value))
				{
					this.OnAbsentReasonChanging(value);
					this.SendPropertyChanging();
					this._AbsentReason = value;
					this.SendPropertyChanged("AbsentReason");
					this.OnAbsentReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="NVarChar(450)")]
		public string CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rowstatus", DbType="Int NOT NULL")]
		public int Rowstatus
		{
			get
			{
				return this._Rowstatus;
			}
			set
			{
				if ((this._Rowstatus != value))
				{
					this.OnRowstatusChanging(value);
					this.SendPropertyChanging();
					this._Rowstatus = value;
					this.SendPropertyChanged("Rowstatus");
					this.OnRowstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeFingerPrint_EmployeeAttendance", Storage="_EmployeeFingerPrint", ThisKey="FingerPrintId", OtherKey="Id", IsForeignKey=true)]
		public EmployeeFingerPrint EmployeeFingerPrint
		{
			get
			{
				return this._EmployeeFingerPrint.Entity;
			}
			set
			{
				EmployeeFingerPrint previousValue = this._EmployeeFingerPrint.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeFingerPrint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeFingerPrint.Entity = null;
						previousValue.EmployeeAttendances.Remove(this);
					}
					this._EmployeeFingerPrint.Entity = value;
					if ((value != null))
					{
						value.EmployeeAttendances.Add(this);
						this._FingerPrintId = value.Id;
					}
					else
					{
						this._FingerPrintId = default(System.Guid);
					}
					this.SendPropertyChanged("EmployeeFingerPrint");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttendanceLogFiles")]
	public partial class AttendanceLogFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _EnrollNo;
		
		private int _Year;
		
		private int _Month;
		
		private int _Day;
		
		private int _Hour;
		
		private int _Minute;
		
		private int _Second;
		
		private int _VerifyMode;
		
		private int _InOutMode;
		
		private int _WorkCode;
		
		private System.Guid _DeviceSettingId;
		
		private System.DateTime _AttendanceDate;
		
		private EntityRef<DeviceSetting> _DeviceSetting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnEnrollNoChanging(string value);
    partial void OnEnrollNoChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMonthChanging(int value);
    partial void OnMonthChanged();
    partial void OnDayChanging(int value);
    partial void OnDayChanged();
    partial void OnHourChanging(int value);
    partial void OnHourChanged();
    partial void OnMinuteChanging(int value);
    partial void OnMinuteChanged();
    partial void OnSecondChanging(int value);
    partial void OnSecondChanged();
    partial void OnVerifyModeChanging(int value);
    partial void OnVerifyModeChanged();
    partial void OnInOutModeChanging(int value);
    partial void OnInOutModeChanged();
    partial void OnWorkCodeChanging(int value);
    partial void OnWorkCodeChanged();
    partial void OnDeviceSettingIdChanging(System.Guid value);
    partial void OnDeviceSettingIdChanged();
    partial void OnAttendanceDateChanging(System.DateTime value);
    partial void OnAttendanceDateChanged();
    #endregion
		
		public AttendanceLogFile()
		{
			this._DeviceSetting = default(EntityRef<DeviceSetting>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnrollNo", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EnrollNo
		{
			get
			{
				return this._EnrollNo;
			}
			set
			{
				if ((this._EnrollNo != value))
				{
					this.OnEnrollNoChanging(value);
					this.SendPropertyChanging();
					this._EnrollNo = value;
					this.SendPropertyChanged("EnrollNo");
					this.OnEnrollNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int NOT NULL")]
		public int Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Int NOT NULL")]
		public int Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hour", DbType="Int NOT NULL")]
		public int Hour
		{
			get
			{
				return this._Hour;
			}
			set
			{
				if ((this._Hour != value))
				{
					this.OnHourChanging(value);
					this.SendPropertyChanging();
					this._Hour = value;
					this.SendPropertyChanged("Hour");
					this.OnHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Minute", DbType="Int NOT NULL")]
		public int Minute
		{
			get
			{
				return this._Minute;
			}
			set
			{
				if ((this._Minute != value))
				{
					this.OnMinuteChanging(value);
					this.SendPropertyChanging();
					this._Minute = value;
					this.SendPropertyChanged("Minute");
					this.OnMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Second", DbType="Int NOT NULL")]
		public int Second
		{
			get
			{
				return this._Second;
			}
			set
			{
				if ((this._Second != value))
				{
					this.OnSecondChanging(value);
					this.SendPropertyChanging();
					this._Second = value;
					this.SendPropertyChanged("Second");
					this.OnSecondChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifyMode", DbType="Int NOT NULL")]
		public int VerifyMode
		{
			get
			{
				return this._VerifyMode;
			}
			set
			{
				if ((this._VerifyMode != value))
				{
					this.OnVerifyModeChanging(value);
					this.SendPropertyChanging();
					this._VerifyMode = value;
					this.SendPropertyChanged("VerifyMode");
					this.OnVerifyModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InOutMode", DbType="Int NOT NULL")]
		public int InOutMode
		{
			get
			{
				return this._InOutMode;
			}
			set
			{
				if ((this._InOutMode != value))
				{
					this.OnInOutModeChanging(value);
					this.SendPropertyChanging();
					this._InOutMode = value;
					this.SendPropertyChanged("InOutMode");
					this.OnInOutModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkCode", DbType="Int NOT NULL")]
		public int WorkCode
		{
			get
			{
				return this._WorkCode;
			}
			set
			{
				if ((this._WorkCode != value))
				{
					this.OnWorkCodeChanging(value);
					this.SendPropertyChanging();
					this._WorkCode = value;
					this.SendPropertyChanged("WorkCode");
					this.OnWorkCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceSettingId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DeviceSettingId
		{
			get
			{
				return this._DeviceSettingId;
			}
			set
			{
				if ((this._DeviceSettingId != value))
				{
					if (this._DeviceSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeviceSettingIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceSettingId = value;
					this.SendPropertyChanged("DeviceSettingId");
					this.OnDeviceSettingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime AttendanceDate
		{
			get
			{
				return this._AttendanceDate;
			}
			set
			{
				if ((this._AttendanceDate != value))
				{
					this.OnAttendanceDateChanging(value);
					this.SendPropertyChanging();
					this._AttendanceDate = value;
					this.SendPropertyChanged("AttendanceDate");
					this.OnAttendanceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeviceSetting_AttendanceLogFile", Storage="_DeviceSetting", ThisKey="DeviceSettingId", OtherKey="Id", IsForeignKey=true)]
		public DeviceSetting DeviceSetting
		{
			get
			{
				return this._DeviceSetting.Entity;
			}
			set
			{
				DeviceSetting previousValue = this._DeviceSetting.Entity;
				if (((previousValue != value) 
							|| (this._DeviceSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeviceSetting.Entity = null;
						previousValue.AttendanceLogFiles.Remove(this);
					}
					this._DeviceSetting.Entity = value;
					if ((value != null))
					{
						value.AttendanceLogFiles.Add(this);
						this._DeviceSettingId = value.Id;
					}
					else
					{
						this._DeviceSettingId = default(System.Guid);
					}
					this.SendPropertyChanged("DeviceSetting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeShifts")]
	public partial class EmployeeShift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _EmployeeId;
		
		private System.Guid _ShiftListId;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedById;
		
		private int _Rowstatus;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<ShiftList> _ShiftList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(System.Guid value);
    partial void OnEmployeeIdChanged();
    partial void OnShiftListIdChanging(System.Guid value);
    partial void OnShiftListIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByIdChanging(string value);
    partial void OnCreatedByIdChanged();
    partial void OnRowstatusChanging(int value);
    partial void OnRowstatusChanged();
    #endregion
		
		public EmployeeShift()
		{
			this._Employee = default(EntityRef<Employee>);
			this._ShiftList = default(EntityRef<ShiftList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftListId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ShiftListId
		{
			get
			{
				return this._ShiftListId;
			}
			set
			{
				if ((this._ShiftListId != value))
				{
					if (this._ShiftList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShiftListIdChanging(value);
					this.SendPropertyChanging();
					this._ShiftListId = value;
					this.SendPropertyChanged("ShiftListId");
					this.OnShiftListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="NVarChar(450)")]
		public string CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rowstatus", DbType="Int NOT NULL")]
		public int Rowstatus
		{
			get
			{
				return this._Rowstatus;
			}
			set
			{
				if ((this._Rowstatus != value))
				{
					this.OnRowstatusChanging(value);
					this.SendPropertyChanging();
					this._Rowstatus = value;
					this.SendPropertyChanged("Rowstatus");
					this.OnRowstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeShift", Storage="_Employee", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeShifts.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeShifts.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(System.Guid);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShiftList_EmployeeShift", Storage="_ShiftList", ThisKey="ShiftListId", OtherKey="Id", IsForeignKey=true)]
		public ShiftList ShiftList
		{
			get
			{
				return this._ShiftList.Entity;
			}
			set
			{
				ShiftList previousValue = this._ShiftList.Entity;
				if (((previousValue != value) 
							|| (this._ShiftList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShiftList.Entity = null;
						previousValue.EmployeeShifts.Remove(this);
					}
					this._ShiftList.Entity = value;
					if ((value != null))
					{
						value.EmployeeShifts.Add(this);
						this._ShiftListId = value.Id;
					}
					else
					{
						this._ShiftListId = default(System.Guid);
					}
					this.SendPropertyChanged("ShiftList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
